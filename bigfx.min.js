const BigFX=function(){const n=Math.pow(10,15),r=BigInt(n),e=2000n;class g{constructor(t){void 0===t?this._bigint=0n:"number"==typeof t?this._fromNumber(t):"bigint"==typeof t?this._fromBigInt(t):t instanceof g&&this._fromBigFP(t)}_fromInternal(t){return this._bigint=t,this}_fromNumber(t){this._bigint=BigInt(Math.round(t*n))}_fromBigInt(t){this._bigint=t*r}_fromBigFP(t){this._bigint=t._bigint}clone(){return(new g)._fromInternal(this._bigint)}neg(){return(new g)._fromInternal(-this._bigint)}add(t){return t=new g(t),(new g)._fromInternal(this._bigint+t._bigint)}sub(t){return t=new g(t),(new g)._fromInternal(this._bigint-t._bigint)}mul(t){return t=new g(t),(new g)._fromInternal(this._bigint*t._bigint/r)}div(t){return t=new g(t),(new g)._fromInternal(this._bigint*r/t._bigint)}mod(t){return t=new g(t),(new g)._fromInternal(this._bigint%t._bigint)}and(t){return t=new g(t),new g(this._bigint/r&t._bigint/r)}or(t){return t=new g(t),new g(this._bigint/r|t._bigint/r)}xor(t){return t=new g(t),new g(this._bigint/r^t._bigint/r)}shl(t){return t=new g(t),(new g)._fromInternal(this._bigint<<t._bigint/r)}shr(t){return t=new g(t),(new g)._fromInternal(this._bigint>>t._bigint/r)}exp(){if(this._bigint<r)return new g(Math.exp(Number(this._bigint)/n));{const t=this.shr(1).exp();return t.mul(t)}}log(){return this._bigint<r?new g(Math.log(Number(this._bigint)/n)):this.div(Math.E).log().add(1)}pow(t){return(t=new g(t))._bigint<r?new g(Math.pow(Number(this._bigint)/n,Number(t._bigint)/n)):t._bigint>r*e?(i=t._bigint/r,(new g)._fromInternal(this._bigint**i/r**(i-1n))):this.pow(t.sub(1)).mul(this);var i}sqrt(){return this.pow(.5)}sin(){return new g(Math.sin(this.mod(2*Math.PI).toNumber()))}cos(){return new g(Math.cos(this.mod(2*Math.PI).toNumber()))}tan(){return new g(Math.tan(this.mod(Math.PI).toNumber()))}lt(t){return t=new g(t),this._bigint<t._bigint}toNumber(){return Number(this._bigint)/n}toBigInt(){return this._bigint/r}toScaledBigInt(){return this._bigint}toString(t=10){if(0n===this._bigint)return"0.0";if(this._bigint<0n)return"-"+this.neg().toRadix(t);var i=(Number(this._bigint%r)/n).toString(t).slice(2);return(this._bigint/r).toString(t)+(i?"."+i:"")}toFixed(t=0){if(0n===this._bigint)return"0.0";if(this._bigint<0n)return"-"+this.neg().toRadix(radix);t=(Number(this._bigint%r)/n).toFixed(t).slice(2);return(this._bigint/r).toString()+(t?"."+t:"")}toExponential(){for(var t=this.clone(),i=0;t._bigint>r;)t=t.div(10),i++;for(;t._bigint<r;)t=t.mul(10),i--;return t.toString()+"e"+i}static random(){return new g(Math.random())}}return g.PI=new g(Math.PI),g.E=new g(Math.E),g}();"object"==typeof module&&module.exports&&(module.exports=BigFX);